name: Shirakami-CI

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      os:
        type: string
        default: 'ubuntu-22.04'
      cmake_build_option:
        type: string
        default: ''

jobs:
  Test:
    strategy:
      fail-fast: false
      matrix:
        test-group: [tl_cc, tl_others] # tl: test label
    runs-on: [self-hosted, docker]
    permissions:
      checks: write
    timeout-minutes: 30
    container:
      image: ghcr.io/project-tsurugi/tsurugi-ci:${{ inputs.os || 'ubuntu-22.04' }}
      volumes:
        - ${{ vars.ccache_dir }}:${{ vars.ccache_dir }}
    defaults:
      run:
        shell: bash
    env:
      CCACHE_CONFIGPATH: ${{ vars.ccache_dir }}/ccache.conf
      CCACHE_DIR: ${{ vars.ccache_dir }}/${{ inputs.os || 'ubuntu-22.04' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install_Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          cmake_build_option: ${{ inputs.cmake_build_option }}

      - name: CMake_Build
        run: |
          mkdir -p build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_TESTS=ON -DCMAKE_PREFIX_PATH=${GITHUB_WORKSPACE}/.local -DBUILD_PWAL=ON ${{ inputs.cmake_build_option }} ..
          cmake --build . --target all --clean-first

      - name: CTest_CC
        if: matrix.test-group == 'tl_cc'
        env:
          GTEST_OUTPUT: xml
          ASAN_OPTIONS: detect_stack_use_after_return=true
        run: |
          cd build
          ctest --verbose --timeout 200 -j 16 -L CC

      - name: CTest_LOGGING
        if: matrix.test-group == 'tl_others'
        env:
          GTEST_OUTPUT: xml
          ASAN_OPTIONS: detect_stack_use_after_return=true
        run: |
          cd build
          ctest --verbose --timeout 200 -j 16 -L LOGGING

      - name: CTest_WAITING_BYPASS
        if: matrix.test-group == 'tl_others'
        env:
          GTEST_OUTPUT: xml
          ASAN_OPTIONS: detect_stack_use_after_return=true
        run: |
          cd build
          SHIRAKAMI_ENABLE_WAITING_BYPASS=0 ctest --verbose --timeout 200 -j 16 -L WAITING_BYPASS
          SHIRAKAMI_ENABLE_WAITING_BYPASS=1 ctest --verbose --timeout 200 -j 16 -L WAITING_BYPASS

      - name: Verify
        uses: project-tsurugi/tsurugi-annotations-action@v1
        if: always()
        with:
          matrix: ${{ toJson(matrix) }}

  Analysis:
    runs-on: [self-hosted, docker]
    permissions:
      checks: write
    timeout-minutes: 30
    container:
      image: ghcr.io/project-tsurugi/tsurugi-ci:almalinux-latest
      volumes:
        - ${{ vars.ccache_dir }}:${{ vars.ccache_dir }}
    defaults:
      run:
        shell: bash
    env:
      CCACHE_CONFIGPATH: ${{ vars.ccache_dir }}/ccache.conf
      CCACHE_DIR: ${{ vars.ccache_dir }}/almalinux-latest
      CC: clang
      CXX: 'clang++ -march=native'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install_Dependencies
        uses: ./.github/actions/install-dependencies
        with:
          cmake_build_option: ${{ inputs.cmake_build_option }}

      - name: CMake_Build
        run: |
          mkdir -p build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DBUILD_BENCHMARK=ON -DBUILD_TESTS=OFF -DBUILD_STRICT=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_PREFIX_PATH=${GITHUB_WORKSPACE}/.local -DBUILD_PWAL=ON ${{ inputs.cmake_build_option }} ..
          cmake --build . --target all --clean-first

      - name: Clang-Tidy
        run: |
          #python3 tools/bin/run-clang-tidy.py -quiet -export-fixes=build/clang-tidy-fix.yaml -p build -extra-arg=-Wno-unknown-warning-option -extra-arg=-fsized-deallocation -header-filter=$(pwd)'/(include|src|bench)/.*\.(h|hh)$' $(pwd)'/(src|bench)/.*' 2>&1 | awk '!a[$0]++{print > "build/clang-tidy.log"}'
          python3 tools/bin/run-clang-tidy.py -quiet -export-fixes=build/clang-tidy-fix.yaml -p build -extra-arg=-Wno-unknown-warning-option -extra-arg=-fsized-deallocation -header-filter=$(pwd)'/(include|src)/.*\.(h|hh)$' $(pwd)'/src/.*' 2>&1 | awk '!a[$0]++{print > "build/clang-tidy.log"}'
          head -100000 build/clang-tidy.log

      - name: Doxygen
        run: |
          cd build
          ninja doxygen 2> >(tee doxygen-error.log)

      - name: Verify
        uses: project-tsurugi/tsurugi-annotations-action@v1
        if: always()
